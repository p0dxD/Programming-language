Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> functions block
Rule 2     program -> block
Rule 3     functions -> functions function
Rule 4     functions -> function
Rule 5     function -> ID LPAREN IDlist RPAREN block
Rule 6     function -> ID LPAREN RPAREN block
Rule 7     block -> LCURLY statements RCURLY
Rule 8     block -> LCURLY RCURLY
Rule 9     statements -> statement statements
Rule 10    statements -> statement
Rule 11    statement -> printsmt
Rule 12    statement -> ifstatement
Rule 13    statement -> whilestatement
Rule 14    statement -> elsestatement
Rule 15    statement -> block
Rule 16    statement -> returnstatement
Rule 17    statement -> expression ASSIGMENT expression SEMICOLON
Rule 18    returnstatement -> RETURN expression SEMICOLON
Rule 19    bodystatement -> statement
Rule 20    printsmt -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 21    whilestatement -> WHILE LPAREN expression RPAREN bodystatement
Rule 22    ifstatement -> IF LPAREN expression RPAREN bodystatement
Rule 23    elsestatement -> ifstatement ELSE bodystatement
Rule 24    expression -> expression PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression FLOORDIVISION expression
Rule 27    expression -> expression EXPONENT expression
Rule 28    expression -> expression MODULO expression
Rule 29    expression -> expression TIMES expression
Rule 30    expression -> expression DIVIDE expression
Rule 31    expression -> expression LESSTHAN expression
Rule 32    expression -> expression LESSTHANEQUAL expression
Rule 33    expression -> expression EQUAL expression
Rule 34    expression -> expression NOTEQUAL expression
Rule 35    expression -> expression GREATERTHAN expression
Rule 36    expression -> expression GREATERTHANEQUAL expression
Rule 37    expression -> expression OR expression
Rule 38    expression -> expression AND expression
Rule 39    expression -> expression IN expression
Rule 40    expression -> NOT expression
Rule 41    expression -> PLUS expression
Rule 42    index -> list bracket
Rule 43    index -> STRING bracket
Rule 44    index -> ID bracket
Rule 45    index -> expression bracket
Rule 46    index -> indices
Rule 47    indices -> index bracket
Rule 48    bracket -> LBRACKET expression RBRACKET
Rule 49    list -> LBRACKET RBRACKET
Rule 50    list -> bracket
Rule 51    list -> LBRACKET commalist RBRACKET
Rule 52    commalist -> expression
Rule 53    commalist -> commalist COMMA expression
Rule 54    expressionlist -> expressionlist COMMA expression
Rule 55    expressionlist -> expression
Rule 56    IDlist -> IDlist COMMA ID
Rule 57    IDlist -> ID
Rule 58    expression -> factor
Rule 59    factor -> LPAREN expression RPAREN
Rule 60    funExp -> ID LPAREN expressionlist RPAREN
Rule 61    funExp -> ID LPAREN RPAREN
Rule 62    factor -> INTEGER
Rule 63    factor -> REAL
Rule 64    factor -> STRING
Rule 65    factor -> ID
Rule 66    factor -> list
Rule 67    factor -> index
Rule 68    factor -> funExp

Terminals, with rules where they appear

AND                  : 38
ASSIGMENT            : 17
COMMA                : 53 54 56
DIVIDE               : 30
ELSE                 : 23
EQUAL                : 33
EXPONENT             : 27
FLOORDIVISION        : 26
GREATERTHAN          : 35
GREATERTHANEQUAL     : 36
ID                   : 5 6 44 56 57 60 61 65
IF                   : 22
IN                   : 39
INTEGER              : 62
LBRACKET             : 48 49 51
LCURLY               : 7 8
LESSTHAN             : 31
LESSTHANEQUAL        : 32
LPAREN               : 5 6 20 21 22 59 60 61
MINUS                : 25
MODULO               : 28
NOT                  : 40
NOTEQUAL             : 34
OR                   : 37
PLUS                 : 24 41
PRINT                : 20
RBRACKET             : 48 49 51
RCURLY               : 7 8
REAL                 : 63
RETURN               : 18
RPAREN               : 5 6 20 21 22 59 60 61
SEMICOLON            : 17 18 20
STRING               : 43 64
TIMES                : 29
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

IDlist               : 5 56
block                : 1 2 5 6 15
bodystatement        : 21 22 23
bracket              : 42 43 44 45 47 50
commalist            : 51 53
elsestatement        : 14
expression           : 17 17 18 20 21 22 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 41 45 48 52 53 54 55 59
expressionlist       : 54 60
factor               : 58
funExp               : 68
function             : 3 4
functions            : 1 3
ifstatement          : 12 23
index                : 47 67
indices              : 46
list                 : 42 66
printsmt             : 11
program              : 0
returnstatement      : 16
statement            : 9 10 19
statements           : 7 9
whilestatement       : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions block
    (2) program -> . block
    (3) functions -> . functions function
    (4) functions -> . function
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (5) function -> . ID LPAREN IDlist RPAREN block
    (6) function -> . ID LPAREN RPAREN block

    LCURLY          shift and go to state 5
    ID              shift and go to state 6

    program                        shift and go to state 1
    functions                      shift and go to state 2
    block                          shift and go to state 3
    function                       shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> functions . block
    (3) functions -> functions . function
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (5) function -> . ID LPAREN IDlist RPAREN block
    (6) function -> . ID LPAREN RPAREN block

    LCURLY          shift and go to state 5
    ID              shift and go to state 6

    block                          shift and go to state 7
    function                       shift and go to state 8

state 3

    (2) program -> block .

    $end            reduce using rule 2 (program -> block .)


state 4

    (4) functions -> function .

    LCURLY          reduce using rule 4 (functions -> function .)
    ID              reduce using rule 4 (functions -> function .)


state 5

    (7) block -> LCURLY . statements RCURLY
    (8) block -> LCURLY . RCURLY
    (9) statements -> . statement statements
    (10) statements -> . statement
    (11) statement -> . printsmt
    (12) statement -> . ifstatement
    (13) statement -> . whilestatement
    (14) statement -> . elsestatement
    (15) statement -> . block
    (16) statement -> . returnstatement
    (17) statement -> . expression ASSIGMENT expression SEMICOLON
    (20) printsmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (22) ifstatement -> . IF LPAREN expression RPAREN bodystatement
    (21) whilestatement -> . WHILE LPAREN expression RPAREN bodystatement
    (23) elsestatement -> . ifstatement ELSE bodystatement
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (18) returnstatement -> . RETURN expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    RCURLY          shift and go to state 10
    PRINT           shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    LCURLY          shift and go to state 5
    RETURN          shift and go to state 23
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    statements                     shift and go to state 9
    statement                      shift and go to state 11
    printsmt                       shift and go to state 12
    ifstatement                    shift and go to state 13
    whilestatement                 shift and go to state 14
    elsestatement                  shift and go to state 15
    block                          shift and go to state 16
    returnstatement                shift and go to state 17
    expression                     shift and go to state 18
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 6

    (5) function -> ID . LPAREN IDlist RPAREN block
    (6) function -> ID . LPAREN RPAREN block

    LPAREN          shift and go to state 37


state 7

    (1) program -> functions block .

    $end            reduce using rule 1 (program -> functions block .)


state 8

    (3) functions -> functions function .

    LCURLY          reduce using rule 3 (functions -> functions function .)
    ID              reduce using rule 3 (functions -> functions function .)


state 9

    (7) block -> LCURLY statements . RCURLY

    RCURLY          shift and go to state 38


state 10

    (8) block -> LCURLY RCURLY .

    $end            reduce using rule 8 (block -> LCURLY RCURLY .)
    PRINT           reduce using rule 8 (block -> LCURLY RCURLY .)
    IF              reduce using rule 8 (block -> LCURLY RCURLY .)
    WHILE           reduce using rule 8 (block -> LCURLY RCURLY .)
    LCURLY          reduce using rule 8 (block -> LCURLY RCURLY .)
    RETURN          reduce using rule 8 (block -> LCURLY RCURLY .)
    NOT             reduce using rule 8 (block -> LCURLY RCURLY .)
    PLUS            reduce using rule 8 (block -> LCURLY RCURLY .)
    LPAREN          reduce using rule 8 (block -> LCURLY RCURLY .)
    INTEGER         reduce using rule 8 (block -> LCURLY RCURLY .)
    REAL            reduce using rule 8 (block -> LCURLY RCURLY .)
    STRING          reduce using rule 8 (block -> LCURLY RCURLY .)
    ID              reduce using rule 8 (block -> LCURLY RCURLY .)
    LBRACKET        reduce using rule 8 (block -> LCURLY RCURLY .)
    RCURLY          reduce using rule 8 (block -> LCURLY RCURLY .)
    ELSE            reduce using rule 8 (block -> LCURLY RCURLY .)


state 11

    (9) statements -> statement . statements
    (10) statements -> statement .
    (9) statements -> . statement statements
    (10) statements -> . statement
    (11) statement -> . printsmt
    (12) statement -> . ifstatement
    (13) statement -> . whilestatement
    (14) statement -> . elsestatement
    (15) statement -> . block
    (16) statement -> . returnstatement
    (17) statement -> . expression ASSIGMENT expression SEMICOLON
    (20) printsmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (22) ifstatement -> . IF LPAREN expression RPAREN bodystatement
    (21) whilestatement -> . WHILE LPAREN expression RPAREN bodystatement
    (23) elsestatement -> . ifstatement ELSE bodystatement
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (18) returnstatement -> . RETURN expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    RCURLY          reduce using rule 10 (statements -> statement .)
    PRINT           shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    LCURLY          shift and go to state 5
    RETURN          shift and go to state 23
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    statement                      shift and go to state 11
    statements                     shift and go to state 39
    printsmt                       shift and go to state 12
    ifstatement                    shift and go to state 13
    whilestatement                 shift and go to state 14
    elsestatement                  shift and go to state 15
    block                          shift and go to state 16
    returnstatement                shift and go to state 17
    expression                     shift and go to state 18
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 12

    (11) statement -> printsmt .

    PRINT           reduce using rule 11 (statement -> printsmt .)
    IF              reduce using rule 11 (statement -> printsmt .)
    WHILE           reduce using rule 11 (statement -> printsmt .)
    LCURLY          reduce using rule 11 (statement -> printsmt .)
    RETURN          reduce using rule 11 (statement -> printsmt .)
    NOT             reduce using rule 11 (statement -> printsmt .)
    PLUS            reduce using rule 11 (statement -> printsmt .)
    LPAREN          reduce using rule 11 (statement -> printsmt .)
    INTEGER         reduce using rule 11 (statement -> printsmt .)
    REAL            reduce using rule 11 (statement -> printsmt .)
    STRING          reduce using rule 11 (statement -> printsmt .)
    ID              reduce using rule 11 (statement -> printsmt .)
    LBRACKET        reduce using rule 11 (statement -> printsmt .)
    RCURLY          reduce using rule 11 (statement -> printsmt .)
    ELSE            reduce using rule 11 (statement -> printsmt .)


state 13

    (12) statement -> ifstatement .
    (23) elsestatement -> ifstatement . ELSE bodystatement

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 12 (statement -> ifstatement .)
    IF              reduce using rule 12 (statement -> ifstatement .)
    WHILE           reduce using rule 12 (statement -> ifstatement .)
    LCURLY          reduce using rule 12 (statement -> ifstatement .)
    RETURN          reduce using rule 12 (statement -> ifstatement .)
    NOT             reduce using rule 12 (statement -> ifstatement .)
    PLUS            reduce using rule 12 (statement -> ifstatement .)
    LPAREN          reduce using rule 12 (statement -> ifstatement .)
    INTEGER         reduce using rule 12 (statement -> ifstatement .)
    REAL            reduce using rule 12 (statement -> ifstatement .)
    STRING          reduce using rule 12 (statement -> ifstatement .)
    ID              reduce using rule 12 (statement -> ifstatement .)
    LBRACKET        reduce using rule 12 (statement -> ifstatement .)
    RCURLY          reduce using rule 12 (statement -> ifstatement .)
    ELSE            shift and go to state 40

  ! ELSE            [ reduce using rule 12 (statement -> ifstatement .) ]


state 14

    (13) statement -> whilestatement .

    PRINT           reduce using rule 13 (statement -> whilestatement .)
    IF              reduce using rule 13 (statement -> whilestatement .)
    WHILE           reduce using rule 13 (statement -> whilestatement .)
    LCURLY          reduce using rule 13 (statement -> whilestatement .)
    RETURN          reduce using rule 13 (statement -> whilestatement .)
    NOT             reduce using rule 13 (statement -> whilestatement .)
    PLUS            reduce using rule 13 (statement -> whilestatement .)
    LPAREN          reduce using rule 13 (statement -> whilestatement .)
    INTEGER         reduce using rule 13 (statement -> whilestatement .)
    REAL            reduce using rule 13 (statement -> whilestatement .)
    STRING          reduce using rule 13 (statement -> whilestatement .)
    ID              reduce using rule 13 (statement -> whilestatement .)
    LBRACKET        reduce using rule 13 (statement -> whilestatement .)
    RCURLY          reduce using rule 13 (statement -> whilestatement .)
    ELSE            reduce using rule 13 (statement -> whilestatement .)


state 15

    (14) statement -> elsestatement .

    PRINT           reduce using rule 14 (statement -> elsestatement .)
    IF              reduce using rule 14 (statement -> elsestatement .)
    WHILE           reduce using rule 14 (statement -> elsestatement .)
    LCURLY          reduce using rule 14 (statement -> elsestatement .)
    RETURN          reduce using rule 14 (statement -> elsestatement .)
    NOT             reduce using rule 14 (statement -> elsestatement .)
    PLUS            reduce using rule 14 (statement -> elsestatement .)
    LPAREN          reduce using rule 14 (statement -> elsestatement .)
    INTEGER         reduce using rule 14 (statement -> elsestatement .)
    REAL            reduce using rule 14 (statement -> elsestatement .)
    STRING          reduce using rule 14 (statement -> elsestatement .)
    ID              reduce using rule 14 (statement -> elsestatement .)
    LBRACKET        reduce using rule 14 (statement -> elsestatement .)
    RCURLY          reduce using rule 14 (statement -> elsestatement .)
    ELSE            reduce using rule 14 (statement -> elsestatement .)


state 16

    (15) statement -> block .

    PRINT           reduce using rule 15 (statement -> block .)
    IF              reduce using rule 15 (statement -> block .)
    WHILE           reduce using rule 15 (statement -> block .)
    LCURLY          reduce using rule 15 (statement -> block .)
    RETURN          reduce using rule 15 (statement -> block .)
    NOT             reduce using rule 15 (statement -> block .)
    PLUS            reduce using rule 15 (statement -> block .)
    LPAREN          reduce using rule 15 (statement -> block .)
    INTEGER         reduce using rule 15 (statement -> block .)
    REAL            reduce using rule 15 (statement -> block .)
    STRING          reduce using rule 15 (statement -> block .)
    ID              reduce using rule 15 (statement -> block .)
    LBRACKET        reduce using rule 15 (statement -> block .)
    RCURLY          reduce using rule 15 (statement -> block .)
    ELSE            reduce using rule 15 (statement -> block .)


state 17

    (16) statement -> returnstatement .

    PRINT           reduce using rule 16 (statement -> returnstatement .)
    IF              reduce using rule 16 (statement -> returnstatement .)
    WHILE           reduce using rule 16 (statement -> returnstatement .)
    LCURLY          reduce using rule 16 (statement -> returnstatement .)
    RETURN          reduce using rule 16 (statement -> returnstatement .)
    NOT             reduce using rule 16 (statement -> returnstatement .)
    PLUS            reduce using rule 16 (statement -> returnstatement .)
    LPAREN          reduce using rule 16 (statement -> returnstatement .)
    INTEGER         reduce using rule 16 (statement -> returnstatement .)
    REAL            reduce using rule 16 (statement -> returnstatement .)
    STRING          reduce using rule 16 (statement -> returnstatement .)
    ID              reduce using rule 16 (statement -> returnstatement .)
    LBRACKET        reduce using rule 16 (statement -> returnstatement .)
    RCURLY          reduce using rule 16 (statement -> returnstatement .)
    ELSE            reduce using rule 16 (statement -> returnstatement .)


state 18

    (17) statement -> expression . ASSIGMENT expression SEMICOLON
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       shift and go to state 41
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 19

    (20) printsmt -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 60


state 20

    (59) factor -> LPAREN . expression RPAREN
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 61
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 21

    (22) ifstatement -> IF . LPAREN expression RPAREN bodystatement

    LPAREN          shift and go to state 62


state 22

    (21) whilestatement -> WHILE . LPAREN expression RPAREN bodystatement

    LPAREN          shift and go to state 63


state 23

    (18) returnstatement -> RETURN . expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 64
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 24

    (41) expression -> PLUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 65
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 25

    (40) expression -> NOT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 66
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 26

    (58) expression -> factor .

    ASSIGMENT       reduce using rule 58 (expression -> factor .)
    PLUS            reduce using rule 58 (expression -> factor .)
    MINUS           reduce using rule 58 (expression -> factor .)
    FLOORDIVISION   reduce using rule 58 (expression -> factor .)
    EXPONENT        reduce using rule 58 (expression -> factor .)
    MODULO          reduce using rule 58 (expression -> factor .)
    TIMES           reduce using rule 58 (expression -> factor .)
    DIVIDE          reduce using rule 58 (expression -> factor .)
    LESSTHAN        reduce using rule 58 (expression -> factor .)
    LESSTHANEQUAL   reduce using rule 58 (expression -> factor .)
    EQUAL           reduce using rule 58 (expression -> factor .)
    NOTEQUAL        reduce using rule 58 (expression -> factor .)
    GREATERTHAN     reduce using rule 58 (expression -> factor .)
    GREATERTHANEQUAL reduce using rule 58 (expression -> factor .)
    OR              reduce using rule 58 (expression -> factor .)
    AND             reduce using rule 58 (expression -> factor .)
    IN              reduce using rule 58 (expression -> factor .)
    LBRACKET        reduce using rule 58 (expression -> factor .)
    RPAREN          reduce using rule 58 (expression -> factor .)
    SEMICOLON       reduce using rule 58 (expression -> factor .)
    RBRACKET        reduce using rule 58 (expression -> factor .)
    COMMA           reduce using rule 58 (expression -> factor .)


state 27

    (62) factor -> INTEGER .

    ASSIGMENT       reduce using rule 62 (factor -> INTEGER .)
    PLUS            reduce using rule 62 (factor -> INTEGER .)
    MINUS           reduce using rule 62 (factor -> INTEGER .)
    FLOORDIVISION   reduce using rule 62 (factor -> INTEGER .)
    EXPONENT        reduce using rule 62 (factor -> INTEGER .)
    MODULO          reduce using rule 62 (factor -> INTEGER .)
    TIMES           reduce using rule 62 (factor -> INTEGER .)
    DIVIDE          reduce using rule 62 (factor -> INTEGER .)
    LESSTHAN        reduce using rule 62 (factor -> INTEGER .)
    LESSTHANEQUAL   reduce using rule 62 (factor -> INTEGER .)
    EQUAL           reduce using rule 62 (factor -> INTEGER .)
    NOTEQUAL        reduce using rule 62 (factor -> INTEGER .)
    GREATERTHAN     reduce using rule 62 (factor -> INTEGER .)
    GREATERTHANEQUAL reduce using rule 62 (factor -> INTEGER .)
    OR              reduce using rule 62 (factor -> INTEGER .)
    AND             reduce using rule 62 (factor -> INTEGER .)
    IN              reduce using rule 62 (factor -> INTEGER .)
    LBRACKET        reduce using rule 62 (factor -> INTEGER .)
    RPAREN          reduce using rule 62 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 62 (factor -> INTEGER .)
    RBRACKET        reduce using rule 62 (factor -> INTEGER .)
    COMMA           reduce using rule 62 (factor -> INTEGER .)


state 28

    (63) factor -> REAL .

    ASSIGMENT       reduce using rule 63 (factor -> REAL .)
    PLUS            reduce using rule 63 (factor -> REAL .)
    MINUS           reduce using rule 63 (factor -> REAL .)
    FLOORDIVISION   reduce using rule 63 (factor -> REAL .)
    EXPONENT        reduce using rule 63 (factor -> REAL .)
    MODULO          reduce using rule 63 (factor -> REAL .)
    TIMES           reduce using rule 63 (factor -> REAL .)
    DIVIDE          reduce using rule 63 (factor -> REAL .)
    LESSTHAN        reduce using rule 63 (factor -> REAL .)
    LESSTHANEQUAL   reduce using rule 63 (factor -> REAL .)
    EQUAL           reduce using rule 63 (factor -> REAL .)
    NOTEQUAL        reduce using rule 63 (factor -> REAL .)
    GREATERTHAN     reduce using rule 63 (factor -> REAL .)
    GREATERTHANEQUAL reduce using rule 63 (factor -> REAL .)
    OR              reduce using rule 63 (factor -> REAL .)
    AND             reduce using rule 63 (factor -> REAL .)
    IN              reduce using rule 63 (factor -> REAL .)
    LBRACKET        reduce using rule 63 (factor -> REAL .)
    RPAREN          reduce using rule 63 (factor -> REAL .)
    SEMICOLON       reduce using rule 63 (factor -> REAL .)
    RBRACKET        reduce using rule 63 (factor -> REAL .)
    COMMA           reduce using rule 63 (factor -> REAL .)


state 29

    (64) factor -> STRING .
    (43) index -> STRING . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGMENT       reduce using rule 64 (factor -> STRING .)
    PLUS            reduce using rule 64 (factor -> STRING .)
    MINUS           reduce using rule 64 (factor -> STRING .)
    FLOORDIVISION   reduce using rule 64 (factor -> STRING .)
    EXPONENT        reduce using rule 64 (factor -> STRING .)
    MODULO          reduce using rule 64 (factor -> STRING .)
    TIMES           reduce using rule 64 (factor -> STRING .)
    DIVIDE          reduce using rule 64 (factor -> STRING .)
    LESSTHAN        reduce using rule 64 (factor -> STRING .)
    LESSTHANEQUAL   reduce using rule 64 (factor -> STRING .)
    EQUAL           reduce using rule 64 (factor -> STRING .)
    NOTEQUAL        reduce using rule 64 (factor -> STRING .)
    GREATERTHAN     reduce using rule 64 (factor -> STRING .)
    GREATERTHANEQUAL reduce using rule 64 (factor -> STRING .)
    OR              reduce using rule 64 (factor -> STRING .)
    AND             reduce using rule 64 (factor -> STRING .)
    IN              reduce using rule 64 (factor -> STRING .)
    RPAREN          reduce using rule 64 (factor -> STRING .)
    SEMICOLON       reduce using rule 64 (factor -> STRING .)
    RBRACKET        reduce using rule 64 (factor -> STRING .)
    COMMA           reduce using rule 64 (factor -> STRING .)
    LBRACKET        shift and go to state 59

  ! LBRACKET        [ reduce using rule 64 (factor -> STRING .) ]

    bracket                        shift and go to state 67

state 30

    (65) factor -> ID .
    (44) index -> ID . bracket
    (60) funExp -> ID . LPAREN expressionlist RPAREN
    (61) funExp -> ID . LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGMENT       reduce using rule 65 (factor -> ID .)
    PLUS            reduce using rule 65 (factor -> ID .)
    MINUS           reduce using rule 65 (factor -> ID .)
    FLOORDIVISION   reduce using rule 65 (factor -> ID .)
    EXPONENT        reduce using rule 65 (factor -> ID .)
    MODULO          reduce using rule 65 (factor -> ID .)
    TIMES           reduce using rule 65 (factor -> ID .)
    DIVIDE          reduce using rule 65 (factor -> ID .)
    LESSTHAN        reduce using rule 65 (factor -> ID .)
    LESSTHANEQUAL   reduce using rule 65 (factor -> ID .)
    EQUAL           reduce using rule 65 (factor -> ID .)
    NOTEQUAL        reduce using rule 65 (factor -> ID .)
    GREATERTHAN     reduce using rule 65 (factor -> ID .)
    GREATERTHANEQUAL reduce using rule 65 (factor -> ID .)
    OR              reduce using rule 65 (factor -> ID .)
    AND             reduce using rule 65 (factor -> ID .)
    IN              reduce using rule 65 (factor -> ID .)
    RPAREN          reduce using rule 65 (factor -> ID .)
    SEMICOLON       reduce using rule 65 (factor -> ID .)
    RBRACKET        reduce using rule 65 (factor -> ID .)
    COMMA           reduce using rule 65 (factor -> ID .)
    LPAREN          shift and go to state 69
    LBRACKET        shift and go to state 59

  ! LBRACKET        [ reduce using rule 65 (factor -> ID .) ]

    bracket                        shift and go to state 68

state 31

    (66) factor -> list .
    (42) index -> list . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGMENT       reduce using rule 66 (factor -> list .)
    PLUS            reduce using rule 66 (factor -> list .)
    MINUS           reduce using rule 66 (factor -> list .)
    FLOORDIVISION   reduce using rule 66 (factor -> list .)
    EXPONENT        reduce using rule 66 (factor -> list .)
    MODULO          reduce using rule 66 (factor -> list .)
    TIMES           reduce using rule 66 (factor -> list .)
    DIVIDE          reduce using rule 66 (factor -> list .)
    LESSTHAN        reduce using rule 66 (factor -> list .)
    LESSTHANEQUAL   reduce using rule 66 (factor -> list .)
    EQUAL           reduce using rule 66 (factor -> list .)
    NOTEQUAL        reduce using rule 66 (factor -> list .)
    GREATERTHAN     reduce using rule 66 (factor -> list .)
    GREATERTHANEQUAL reduce using rule 66 (factor -> list .)
    OR              reduce using rule 66 (factor -> list .)
    AND             reduce using rule 66 (factor -> list .)
    IN              reduce using rule 66 (factor -> list .)
    RPAREN          reduce using rule 66 (factor -> list .)
    SEMICOLON       reduce using rule 66 (factor -> list .)
    RBRACKET        reduce using rule 66 (factor -> list .)
    COMMA           reduce using rule 66 (factor -> list .)
    LBRACKET        shift and go to state 59

  ! LBRACKET        [ reduce using rule 66 (factor -> list .) ]

    bracket                        shift and go to state 70

state 32

    (67) factor -> index .
    (47) indices -> index . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    ASSIGMENT       reduce using rule 67 (factor -> index .)
    PLUS            reduce using rule 67 (factor -> index .)
    MINUS           reduce using rule 67 (factor -> index .)
    FLOORDIVISION   reduce using rule 67 (factor -> index .)
    EXPONENT        reduce using rule 67 (factor -> index .)
    MODULO          reduce using rule 67 (factor -> index .)
    TIMES           reduce using rule 67 (factor -> index .)
    DIVIDE          reduce using rule 67 (factor -> index .)
    LESSTHAN        reduce using rule 67 (factor -> index .)
    LESSTHANEQUAL   reduce using rule 67 (factor -> index .)
    EQUAL           reduce using rule 67 (factor -> index .)
    NOTEQUAL        reduce using rule 67 (factor -> index .)
    GREATERTHAN     reduce using rule 67 (factor -> index .)
    GREATERTHANEQUAL reduce using rule 67 (factor -> index .)
    OR              reduce using rule 67 (factor -> index .)
    AND             reduce using rule 67 (factor -> index .)
    IN              reduce using rule 67 (factor -> index .)
    RPAREN          reduce using rule 67 (factor -> index .)
    SEMICOLON       reduce using rule 67 (factor -> index .)
    RBRACKET        reduce using rule 67 (factor -> index .)
    COMMA           reduce using rule 67 (factor -> index .)
    LBRACKET        shift and go to state 59

  ! LBRACKET        [ reduce using rule 67 (factor -> index .) ]

    bracket                        shift and go to state 71

state 33

    (68) factor -> funExp .

    ASSIGMENT       reduce using rule 68 (factor -> funExp .)
    PLUS            reduce using rule 68 (factor -> funExp .)
    MINUS           reduce using rule 68 (factor -> funExp .)
    FLOORDIVISION   reduce using rule 68 (factor -> funExp .)
    EXPONENT        reduce using rule 68 (factor -> funExp .)
    MODULO          reduce using rule 68 (factor -> funExp .)
    TIMES           reduce using rule 68 (factor -> funExp .)
    DIVIDE          reduce using rule 68 (factor -> funExp .)
    LESSTHAN        reduce using rule 68 (factor -> funExp .)
    LESSTHANEQUAL   reduce using rule 68 (factor -> funExp .)
    EQUAL           reduce using rule 68 (factor -> funExp .)
    NOTEQUAL        reduce using rule 68 (factor -> funExp .)
    GREATERTHAN     reduce using rule 68 (factor -> funExp .)
    GREATERTHANEQUAL reduce using rule 68 (factor -> funExp .)
    OR              reduce using rule 68 (factor -> funExp .)
    AND             reduce using rule 68 (factor -> funExp .)
    IN              reduce using rule 68 (factor -> funExp .)
    LBRACKET        reduce using rule 68 (factor -> funExp .)
    RPAREN          reduce using rule 68 (factor -> funExp .)
    SEMICOLON       reduce using rule 68 (factor -> funExp .)
    RBRACKET        reduce using rule 68 (factor -> funExp .)
    COMMA           reduce using rule 68 (factor -> funExp .)


state 34

    (49) list -> LBRACKET . RBRACKET
    (51) list -> LBRACKET . commalist RBRACKET
    (48) bracket -> LBRACKET . expression RBRACKET
    (52) commalist -> . expression
    (53) commalist -> . commalist COMMA expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    RBRACKET        shift and go to state 72
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    commalist                      shift and go to state 73
    expression                     shift and go to state 74
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 35

    (50) list -> bracket .

    LBRACKET        reduce using rule 50 (list -> bracket .)
    ASSIGMENT       reduce using rule 50 (list -> bracket .)
    PLUS            reduce using rule 50 (list -> bracket .)
    MINUS           reduce using rule 50 (list -> bracket .)
    FLOORDIVISION   reduce using rule 50 (list -> bracket .)
    EXPONENT        reduce using rule 50 (list -> bracket .)
    MODULO          reduce using rule 50 (list -> bracket .)
    TIMES           reduce using rule 50 (list -> bracket .)
    DIVIDE          reduce using rule 50 (list -> bracket .)
    LESSTHAN        reduce using rule 50 (list -> bracket .)
    LESSTHANEQUAL   reduce using rule 50 (list -> bracket .)
    EQUAL           reduce using rule 50 (list -> bracket .)
    NOTEQUAL        reduce using rule 50 (list -> bracket .)
    GREATERTHAN     reduce using rule 50 (list -> bracket .)
    GREATERTHANEQUAL reduce using rule 50 (list -> bracket .)
    OR              reduce using rule 50 (list -> bracket .)
    AND             reduce using rule 50 (list -> bracket .)
    IN              reduce using rule 50 (list -> bracket .)
    RPAREN          reduce using rule 50 (list -> bracket .)
    SEMICOLON       reduce using rule 50 (list -> bracket .)
    RBRACKET        reduce using rule 50 (list -> bracket .)
    COMMA           reduce using rule 50 (list -> bracket .)


state 36

    (46) index -> indices .

    LBRACKET        reduce using rule 46 (index -> indices .)
    ASSIGMENT       reduce using rule 46 (index -> indices .)
    PLUS            reduce using rule 46 (index -> indices .)
    MINUS           reduce using rule 46 (index -> indices .)
    FLOORDIVISION   reduce using rule 46 (index -> indices .)
    EXPONENT        reduce using rule 46 (index -> indices .)
    MODULO          reduce using rule 46 (index -> indices .)
    TIMES           reduce using rule 46 (index -> indices .)
    DIVIDE          reduce using rule 46 (index -> indices .)
    LESSTHAN        reduce using rule 46 (index -> indices .)
    LESSTHANEQUAL   reduce using rule 46 (index -> indices .)
    EQUAL           reduce using rule 46 (index -> indices .)
    NOTEQUAL        reduce using rule 46 (index -> indices .)
    GREATERTHAN     reduce using rule 46 (index -> indices .)
    GREATERTHANEQUAL reduce using rule 46 (index -> indices .)
    OR              reduce using rule 46 (index -> indices .)
    AND             reduce using rule 46 (index -> indices .)
    IN              reduce using rule 46 (index -> indices .)
    RPAREN          reduce using rule 46 (index -> indices .)
    SEMICOLON       reduce using rule 46 (index -> indices .)
    RBRACKET        reduce using rule 46 (index -> indices .)
    COMMA           reduce using rule 46 (index -> indices .)


state 37

    (5) function -> ID LPAREN . IDlist RPAREN block
    (6) function -> ID LPAREN . RPAREN block
    (56) IDlist -> . IDlist COMMA ID
    (57) IDlist -> . ID

    RPAREN          shift and go to state 77
    ID              shift and go to state 75

    IDlist                         shift and go to state 76

state 38

    (7) block -> LCURLY statements RCURLY .

    $end            reduce using rule 7 (block -> LCURLY statements RCURLY .)
    PRINT           reduce using rule 7 (block -> LCURLY statements RCURLY .)
    IF              reduce using rule 7 (block -> LCURLY statements RCURLY .)
    WHILE           reduce using rule 7 (block -> LCURLY statements RCURLY .)
    LCURLY          reduce using rule 7 (block -> LCURLY statements RCURLY .)
    RETURN          reduce using rule 7 (block -> LCURLY statements RCURLY .)
    NOT             reduce using rule 7 (block -> LCURLY statements RCURLY .)
    PLUS            reduce using rule 7 (block -> LCURLY statements RCURLY .)
    LPAREN          reduce using rule 7 (block -> LCURLY statements RCURLY .)
    INTEGER         reduce using rule 7 (block -> LCURLY statements RCURLY .)
    REAL            reduce using rule 7 (block -> LCURLY statements RCURLY .)
    STRING          reduce using rule 7 (block -> LCURLY statements RCURLY .)
    ID              reduce using rule 7 (block -> LCURLY statements RCURLY .)
    LBRACKET        reduce using rule 7 (block -> LCURLY statements RCURLY .)
    RCURLY          reduce using rule 7 (block -> LCURLY statements RCURLY .)
    ELSE            reduce using rule 7 (block -> LCURLY statements RCURLY .)


state 39

    (9) statements -> statement statements .

    RCURLY          reduce using rule 9 (statements -> statement statements .)


state 40

    (23) elsestatement -> ifstatement ELSE . bodystatement
    (19) bodystatement -> . statement
    (11) statement -> . printsmt
    (12) statement -> . ifstatement
    (13) statement -> . whilestatement
    (14) statement -> . elsestatement
    (15) statement -> . block
    (16) statement -> . returnstatement
    (17) statement -> . expression ASSIGMENT expression SEMICOLON
    (20) printsmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (22) ifstatement -> . IF LPAREN expression RPAREN bodystatement
    (21) whilestatement -> . WHILE LPAREN expression RPAREN bodystatement
    (23) elsestatement -> . ifstatement ELSE bodystatement
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (18) returnstatement -> . RETURN expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    PRINT           shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    LCURLY          shift and go to state 5
    RETURN          shift and go to state 23
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    ifstatement                    shift and go to state 13
    bodystatement                  shift and go to state 78
    statement                      shift and go to state 79
    printsmt                       shift and go to state 12
    whilestatement                 shift and go to state 14
    elsestatement                  shift and go to state 15
    block                          shift and go to state 16
    returnstatement                shift and go to state 17
    expression                     shift and go to state 18
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 41

    (17) statement -> expression ASSIGMENT . expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 80
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 42

    (24) expression -> expression PLUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 81
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 43

    (25) expression -> expression MINUS . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 82
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 44

    (26) expression -> expression FLOORDIVISION . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 83
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 45

    (27) expression -> expression EXPONENT . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 84
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 46

    (28) expression -> expression MODULO . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 85
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 47

    (29) expression -> expression TIMES . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 86
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 48

    (30) expression -> expression DIVIDE . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 87
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 49

    (31) expression -> expression LESSTHAN . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 88
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 50

    (32) expression -> expression LESSTHANEQUAL . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 89
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 51

    (33) expression -> expression EQUAL . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 90
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 52

    (34) expression -> expression NOTEQUAL . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 91
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 53

    (35) expression -> expression GREATERTHAN . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 92
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 54

    (36) expression -> expression GREATERTHANEQUAL . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 93
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 55

    (37) expression -> expression OR . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 94
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 56

    (38) expression -> expression AND . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 95
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 57

    (39) expression -> expression IN . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 96
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 58

    (45) index -> expression bracket .

    LBRACKET        reduce using rule 45 (index -> expression bracket .)
    ASSIGMENT       reduce using rule 45 (index -> expression bracket .)
    PLUS            reduce using rule 45 (index -> expression bracket .)
    MINUS           reduce using rule 45 (index -> expression bracket .)
    FLOORDIVISION   reduce using rule 45 (index -> expression bracket .)
    EXPONENT        reduce using rule 45 (index -> expression bracket .)
    MODULO          reduce using rule 45 (index -> expression bracket .)
    TIMES           reduce using rule 45 (index -> expression bracket .)
    DIVIDE          reduce using rule 45 (index -> expression bracket .)
    LESSTHAN        reduce using rule 45 (index -> expression bracket .)
    LESSTHANEQUAL   reduce using rule 45 (index -> expression bracket .)
    EQUAL           reduce using rule 45 (index -> expression bracket .)
    NOTEQUAL        reduce using rule 45 (index -> expression bracket .)
    GREATERTHAN     reduce using rule 45 (index -> expression bracket .)
    GREATERTHANEQUAL reduce using rule 45 (index -> expression bracket .)
    OR              reduce using rule 45 (index -> expression bracket .)
    AND             reduce using rule 45 (index -> expression bracket .)
    IN              reduce using rule 45 (index -> expression bracket .)
    RPAREN          reduce using rule 45 (index -> expression bracket .)
    SEMICOLON       reduce using rule 45 (index -> expression bracket .)
    RBRACKET        reduce using rule 45 (index -> expression bracket .)
    COMMA           reduce using rule 45 (index -> expression bracket .)


state 59

    (48) bracket -> LBRACKET . expression RBRACKET
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 97
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 60

    (20) printsmt -> PRINT LPAREN . expression RPAREN SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 98
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 61

    (59) factor -> LPAREN expression . RPAREN
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 62

    (22) ifstatement -> IF LPAREN . expression RPAREN bodystatement
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 100
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 63

    (21) whilestatement -> WHILE LPAREN . expression RPAREN bodystatement
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 101
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 64

    (18) returnstatement -> RETURN expression . SEMICOLON
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 102
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 65

    (41) expression -> PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 41 (expression -> PLUS expression .)
    PLUS            reduce using rule 41 (expression -> PLUS expression .)
    MINUS           reduce using rule 41 (expression -> PLUS expression .)
    LESSTHAN        reduce using rule 41 (expression -> PLUS expression .)
    LESSTHANEQUAL   reduce using rule 41 (expression -> PLUS expression .)
    EQUAL           reduce using rule 41 (expression -> PLUS expression .)
    NOTEQUAL        reduce using rule 41 (expression -> PLUS expression .)
    GREATERTHAN     reduce using rule 41 (expression -> PLUS expression .)
    GREATERTHANEQUAL reduce using rule 41 (expression -> PLUS expression .)
    OR              reduce using rule 41 (expression -> PLUS expression .)
    AND             reduce using rule 41 (expression -> PLUS expression .)
    IN              reduce using rule 41 (expression -> PLUS expression .)
    LBRACKET        reduce using rule 41 (expression -> PLUS expression .)
    RPAREN          reduce using rule 41 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 41 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 41 (expression -> PLUS expression .)
    COMMA           reduce using rule 41 (expression -> PLUS expression .)
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! FLOORDIVISION   [ reduce using rule 41 (expression -> PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 41 (expression -> PLUS expression .) ]
  ! MODULO          [ reduce using rule 41 (expression -> PLUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 66

    (40) expression -> NOT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 40 (expression -> NOT expression .)
    OR              reduce using rule 40 (expression -> NOT expression .)
    AND             reduce using rule 40 (expression -> NOT expression .)
    LBRACKET        reduce using rule 40 (expression -> NOT expression .)
    RPAREN          reduce using rule 40 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 40 (expression -> NOT expression .)
    RBRACKET        reduce using rule 40 (expression -> NOT expression .)
    COMMA           reduce using rule 40 (expression -> NOT expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 40 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> NOT expression .) ]
  ! FLOORDIVISION   [ reduce using rule 40 (expression -> NOT expression .) ]
  ! EXPONENT        [ reduce using rule 40 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 40 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> NOT expression .) ]
  ! LESSTHAN        [ reduce using rule 40 (expression -> NOT expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 40 (expression -> NOT expression .) ]
  ! EQUAL           [ reduce using rule 40 (expression -> NOT expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> NOT expression .) ]
  ! GREATERTHAN     [ reduce using rule 40 (expression -> NOT expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 40 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 40 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 67

    (43) index -> STRING bracket .

    LBRACKET        reduce using rule 43 (index -> STRING bracket .)
    ASSIGMENT       reduce using rule 43 (index -> STRING bracket .)
    PLUS            reduce using rule 43 (index -> STRING bracket .)
    MINUS           reduce using rule 43 (index -> STRING bracket .)
    FLOORDIVISION   reduce using rule 43 (index -> STRING bracket .)
    EXPONENT        reduce using rule 43 (index -> STRING bracket .)
    MODULO          reduce using rule 43 (index -> STRING bracket .)
    TIMES           reduce using rule 43 (index -> STRING bracket .)
    DIVIDE          reduce using rule 43 (index -> STRING bracket .)
    LESSTHAN        reduce using rule 43 (index -> STRING bracket .)
    LESSTHANEQUAL   reduce using rule 43 (index -> STRING bracket .)
    EQUAL           reduce using rule 43 (index -> STRING bracket .)
    NOTEQUAL        reduce using rule 43 (index -> STRING bracket .)
    GREATERTHAN     reduce using rule 43 (index -> STRING bracket .)
    GREATERTHANEQUAL reduce using rule 43 (index -> STRING bracket .)
    OR              reduce using rule 43 (index -> STRING bracket .)
    AND             reduce using rule 43 (index -> STRING bracket .)
    IN              reduce using rule 43 (index -> STRING bracket .)
    RPAREN          reduce using rule 43 (index -> STRING bracket .)
    SEMICOLON       reduce using rule 43 (index -> STRING bracket .)
    RBRACKET        reduce using rule 43 (index -> STRING bracket .)
    COMMA           reduce using rule 43 (index -> STRING bracket .)


state 68

    (44) index -> ID bracket .

    LBRACKET        reduce using rule 44 (index -> ID bracket .)
    ASSIGMENT       reduce using rule 44 (index -> ID bracket .)
    PLUS            reduce using rule 44 (index -> ID bracket .)
    MINUS           reduce using rule 44 (index -> ID bracket .)
    FLOORDIVISION   reduce using rule 44 (index -> ID bracket .)
    EXPONENT        reduce using rule 44 (index -> ID bracket .)
    MODULO          reduce using rule 44 (index -> ID bracket .)
    TIMES           reduce using rule 44 (index -> ID bracket .)
    DIVIDE          reduce using rule 44 (index -> ID bracket .)
    LESSTHAN        reduce using rule 44 (index -> ID bracket .)
    LESSTHANEQUAL   reduce using rule 44 (index -> ID bracket .)
    EQUAL           reduce using rule 44 (index -> ID bracket .)
    NOTEQUAL        reduce using rule 44 (index -> ID bracket .)
    GREATERTHAN     reduce using rule 44 (index -> ID bracket .)
    GREATERTHANEQUAL reduce using rule 44 (index -> ID bracket .)
    OR              reduce using rule 44 (index -> ID bracket .)
    AND             reduce using rule 44 (index -> ID bracket .)
    IN              reduce using rule 44 (index -> ID bracket .)
    RPAREN          reduce using rule 44 (index -> ID bracket .)
    SEMICOLON       reduce using rule 44 (index -> ID bracket .)
    RBRACKET        reduce using rule 44 (index -> ID bracket .)
    COMMA           reduce using rule 44 (index -> ID bracket .)


state 69

    (60) funExp -> ID LPAREN . expressionlist RPAREN
    (61) funExp -> ID LPAREN . RPAREN
    (54) expressionlist -> . expressionlist COMMA expression
    (55) expressionlist -> . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    RPAREN          shift and go to state 104
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expressionlist                 shift and go to state 103
    expression                     shift and go to state 105
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 70

    (42) index -> list bracket .

    LBRACKET        reduce using rule 42 (index -> list bracket .)
    ASSIGMENT       reduce using rule 42 (index -> list bracket .)
    PLUS            reduce using rule 42 (index -> list bracket .)
    MINUS           reduce using rule 42 (index -> list bracket .)
    FLOORDIVISION   reduce using rule 42 (index -> list bracket .)
    EXPONENT        reduce using rule 42 (index -> list bracket .)
    MODULO          reduce using rule 42 (index -> list bracket .)
    TIMES           reduce using rule 42 (index -> list bracket .)
    DIVIDE          reduce using rule 42 (index -> list bracket .)
    LESSTHAN        reduce using rule 42 (index -> list bracket .)
    LESSTHANEQUAL   reduce using rule 42 (index -> list bracket .)
    EQUAL           reduce using rule 42 (index -> list bracket .)
    NOTEQUAL        reduce using rule 42 (index -> list bracket .)
    GREATERTHAN     reduce using rule 42 (index -> list bracket .)
    GREATERTHANEQUAL reduce using rule 42 (index -> list bracket .)
    OR              reduce using rule 42 (index -> list bracket .)
    AND             reduce using rule 42 (index -> list bracket .)
    IN              reduce using rule 42 (index -> list bracket .)
    RPAREN          reduce using rule 42 (index -> list bracket .)
    SEMICOLON       reduce using rule 42 (index -> list bracket .)
    RBRACKET        reduce using rule 42 (index -> list bracket .)
    COMMA           reduce using rule 42 (index -> list bracket .)


state 71

    (47) indices -> index bracket .

    LBRACKET        reduce using rule 47 (indices -> index bracket .)
    ASSIGMENT       reduce using rule 47 (indices -> index bracket .)
    PLUS            reduce using rule 47 (indices -> index bracket .)
    MINUS           reduce using rule 47 (indices -> index bracket .)
    FLOORDIVISION   reduce using rule 47 (indices -> index bracket .)
    EXPONENT        reduce using rule 47 (indices -> index bracket .)
    MODULO          reduce using rule 47 (indices -> index bracket .)
    TIMES           reduce using rule 47 (indices -> index bracket .)
    DIVIDE          reduce using rule 47 (indices -> index bracket .)
    LESSTHAN        reduce using rule 47 (indices -> index bracket .)
    LESSTHANEQUAL   reduce using rule 47 (indices -> index bracket .)
    EQUAL           reduce using rule 47 (indices -> index bracket .)
    NOTEQUAL        reduce using rule 47 (indices -> index bracket .)
    GREATERTHAN     reduce using rule 47 (indices -> index bracket .)
    GREATERTHANEQUAL reduce using rule 47 (indices -> index bracket .)
    OR              reduce using rule 47 (indices -> index bracket .)
    AND             reduce using rule 47 (indices -> index bracket .)
    IN              reduce using rule 47 (indices -> index bracket .)
    RPAREN          reduce using rule 47 (indices -> index bracket .)
    SEMICOLON       reduce using rule 47 (indices -> index bracket .)
    RBRACKET        reduce using rule 47 (indices -> index bracket .)
    COMMA           reduce using rule 47 (indices -> index bracket .)


state 72

    (49) list -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 49 (list -> LBRACKET RBRACKET .)
    ASSIGMENT       reduce using rule 49 (list -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 49 (list -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 49 (list -> LBRACKET RBRACKET .)
    FLOORDIVISION   reduce using rule 49 (list -> LBRACKET RBRACKET .)
    EXPONENT        reduce using rule 49 (list -> LBRACKET RBRACKET .)
    MODULO          reduce using rule 49 (list -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 49 (list -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 49 (list -> LBRACKET RBRACKET .)
    LESSTHAN        reduce using rule 49 (list -> LBRACKET RBRACKET .)
    LESSTHANEQUAL   reduce using rule 49 (list -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 49 (list -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 49 (list -> LBRACKET RBRACKET .)
    GREATERTHAN     reduce using rule 49 (list -> LBRACKET RBRACKET .)
    GREATERTHANEQUAL reduce using rule 49 (list -> LBRACKET RBRACKET .)
    OR              reduce using rule 49 (list -> LBRACKET RBRACKET .)
    AND             reduce using rule 49 (list -> LBRACKET RBRACKET .)
    IN              reduce using rule 49 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 49 (list -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 49 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 49 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 49 (list -> LBRACKET RBRACKET .)


state 73

    (51) list -> LBRACKET commalist . RBRACKET
    (53) commalist -> commalist . COMMA expression

    RBRACKET        shift and go to state 106
    COMMA           shift and go to state 107


state 74

    (48) bracket -> LBRACKET expression . RBRACKET
    (52) commalist -> expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 108
    COMMA           reduce using rule 52 (commalist -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

  ! RBRACKET        [ reduce using rule 52 (commalist -> expression .) ]

    bracket                        shift and go to state 58

state 75

    (57) IDlist -> ID .

    RPAREN          reduce using rule 57 (IDlist -> ID .)
    COMMA           reduce using rule 57 (IDlist -> ID .)


state 76

    (5) function -> ID LPAREN IDlist . RPAREN block
    (56) IDlist -> IDlist . COMMA ID

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 77

    (6) function -> ID LPAREN RPAREN . block
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY

    LCURLY          shift and go to state 5

    block                          shift and go to state 111

state 78

    (23) elsestatement -> ifstatement ELSE bodystatement .

    PRINT           reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    IF              reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    WHILE           reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    LCURLY          reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    RETURN          reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    NOT             reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    PLUS            reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    LPAREN          reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    INTEGER         reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    REAL            reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    STRING          reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    ID              reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    LBRACKET        reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    RCURLY          reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)
    ELSE            reduce using rule 23 (elsestatement -> ifstatement ELSE bodystatement .)


state 79

    (19) bodystatement -> statement .

    PRINT           reduce using rule 19 (bodystatement -> statement .)
    IF              reduce using rule 19 (bodystatement -> statement .)
    WHILE           reduce using rule 19 (bodystatement -> statement .)
    LCURLY          reduce using rule 19 (bodystatement -> statement .)
    RETURN          reduce using rule 19 (bodystatement -> statement .)
    NOT             reduce using rule 19 (bodystatement -> statement .)
    PLUS            reduce using rule 19 (bodystatement -> statement .)
    LPAREN          reduce using rule 19 (bodystatement -> statement .)
    INTEGER         reduce using rule 19 (bodystatement -> statement .)
    REAL            reduce using rule 19 (bodystatement -> statement .)
    STRING          reduce using rule 19 (bodystatement -> statement .)
    ID              reduce using rule 19 (bodystatement -> statement .)
    LBRACKET        reduce using rule 19 (bodystatement -> statement .)
    RCURLY          reduce using rule 19 (bodystatement -> statement .)
    ELSE            reduce using rule 19 (bodystatement -> statement .)


state 80

    (17) statement -> expression ASSIGMENT expression . SEMICOLON
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 112
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 81

    (24) expression -> expression PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 24 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 24 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 24 (expression -> expression PLUS expression .)
    LESSTHANEQUAL   reduce using rule 24 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 24 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 24 (expression -> expression PLUS expression .)
    GREATERTHANEQUAL reduce using rule 24 (expression -> expression PLUS expression .)
    OR              reduce using rule 24 (expression -> expression PLUS expression .)
    AND             reduce using rule 24 (expression -> expression PLUS expression .)
    IN              reduce using rule 24 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 24 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 24 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 24 (expression -> expression PLUS expression .)
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! FLOORDIVISION   [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! EXPONENT        [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 82

    (25) expression -> expression MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 25 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 25 (expression -> expression MINUS expression .)
    LESSTHANEQUAL   reduce using rule 25 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 25 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 25 (expression -> expression MINUS expression .)
    GREATERTHANEQUAL reduce using rule 25 (expression -> expression MINUS expression .)
    OR              reduce using rule 25 (expression -> expression MINUS expression .)
    AND             reduce using rule 25 (expression -> expression MINUS expression .)
    IN              reduce using rule 25 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 25 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 25 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 25 (expression -> expression MINUS expression .)
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! FLOORDIVISION   [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! EXPONENT        [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 83

    (26) expression -> expression FLOORDIVISION expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    PLUS            reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    MINUS           reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    FLOORDIVISION   reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    LESSTHAN        reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    LESSTHANEQUAL   reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    EQUAL           reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    GREATERTHAN     reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    GREATERTHANEQUAL reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    OR              reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    AND             reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    IN              reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    LBRACKET        reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    RPAREN          reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    RBRACKET        reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    COMMA           reduce using rule 26 (expression -> expression FLOORDIVISION expression .)
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! EXPONENT        [ reduce using rule 26 (expression -> expression FLOORDIVISION expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression FLOORDIVISION expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression FLOORDIVISION expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression FLOORDIVISION expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! FLOORDIVISION   [ shift and go to state 44 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 84

    (27) expression -> expression EXPONENT expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 27 (expression -> expression EXPONENT expression .)
    PLUS            reduce using rule 27 (expression -> expression EXPONENT expression .)
    MINUS           reduce using rule 27 (expression -> expression EXPONENT expression .)
    FLOORDIVISION   reduce using rule 27 (expression -> expression EXPONENT expression .)
    EXPONENT        reduce using rule 27 (expression -> expression EXPONENT expression .)
    LESSTHAN        reduce using rule 27 (expression -> expression EXPONENT expression .)
    LESSTHANEQUAL   reduce using rule 27 (expression -> expression EXPONENT expression .)
    EQUAL           reduce using rule 27 (expression -> expression EXPONENT expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression EXPONENT expression .)
    GREATERTHAN     reduce using rule 27 (expression -> expression EXPONENT expression .)
    GREATERTHANEQUAL reduce using rule 27 (expression -> expression EXPONENT expression .)
    OR              reduce using rule 27 (expression -> expression EXPONENT expression .)
    AND             reduce using rule 27 (expression -> expression EXPONENT expression .)
    IN              reduce using rule 27 (expression -> expression EXPONENT expression .)
    LBRACKET        reduce using rule 27 (expression -> expression EXPONENT expression .)
    RPAREN          reduce using rule 27 (expression -> expression EXPONENT expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression EXPONENT expression .)
    RBRACKET        reduce using rule 27 (expression -> expression EXPONENT expression .)
    COMMA           reduce using rule 27 (expression -> expression EXPONENT expression .)
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! MODULO          [ reduce using rule 27 (expression -> expression EXPONENT expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EXPONENT expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EXPONENT expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! FLOORDIVISION   [ shift and go to state 44 ]
  ! EXPONENT        [ shift and go to state 45 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 85

    (28) expression -> expression MODULO expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 28 (expression -> expression MODULO expression .)
    PLUS            reduce using rule 28 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 28 (expression -> expression MODULO expression .)
    FLOORDIVISION   reduce using rule 28 (expression -> expression MODULO expression .)
    EXPONENT        reduce using rule 28 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 28 (expression -> expression MODULO expression .)
    LESSTHAN        reduce using rule 28 (expression -> expression MODULO expression .)
    LESSTHANEQUAL   reduce using rule 28 (expression -> expression MODULO expression .)
    EQUAL           reduce using rule 28 (expression -> expression MODULO expression .)
    NOTEQUAL        reduce using rule 28 (expression -> expression MODULO expression .)
    GREATERTHAN     reduce using rule 28 (expression -> expression MODULO expression .)
    GREATERTHANEQUAL reduce using rule 28 (expression -> expression MODULO expression .)
    OR              reduce using rule 28 (expression -> expression MODULO expression .)
    AND             reduce using rule 28 (expression -> expression MODULO expression .)
    IN              reduce using rule 28 (expression -> expression MODULO expression .)
    LBRACKET        reduce using rule 28 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 28 (expression -> expression MODULO expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression MODULO expression .)
    RBRACKET        reduce using rule 28 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 28 (expression -> expression MODULO expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 28 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression MODULO expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! FLOORDIVISION   [ shift and go to state 44 ]
  ! EXPONENT        [ shift and go to state 45 ]
  ! MODULO          [ shift and go to state 46 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 86

    (29) expression -> expression TIMES expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 29 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 29 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 29 (expression -> expression TIMES expression .)
    FLOORDIVISION   reduce using rule 29 (expression -> expression TIMES expression .)
    EXPONENT        reduce using rule 29 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 29 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 29 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 29 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 29 (expression -> expression TIMES expression .)
    LESSTHANEQUAL   reduce using rule 29 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 29 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 29 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 29 (expression -> expression TIMES expression .)
    GREATERTHANEQUAL reduce using rule 29 (expression -> expression TIMES expression .)
    OR              reduce using rule 29 (expression -> expression TIMES expression .)
    AND             reduce using rule 29 (expression -> expression TIMES expression .)
    IN              reduce using rule 29 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 29 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 29 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 29 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 29 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! FLOORDIVISION   [ shift and go to state 44 ]
  ! EXPONENT        [ shift and go to state 45 ]
  ! MODULO          [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 87

    (30) expression -> expression DIVIDE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 30 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 30 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 30 (expression -> expression DIVIDE expression .)
    FLOORDIVISION   reduce using rule 30 (expression -> expression DIVIDE expression .)
    EXPONENT        reduce using rule 30 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 30 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 30 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 30 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 30 (expression -> expression DIVIDE expression .)
    LESSTHANEQUAL   reduce using rule 30 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 30 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 30 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 30 (expression -> expression DIVIDE expression .)
    GREATERTHANEQUAL reduce using rule 30 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 30 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 30 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 30 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 30 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 30 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 30 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 30 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! FLOORDIVISION   [ shift and go to state 44 ]
  ! EXPONENT        [ shift and go to state 45 ]
  ! MODULO          [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 88

    (31) expression -> expression LESSTHAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 31 (expression -> expression LESSTHAN expression .)
    LESSTHAN        reduce using rule 31 (expression -> expression LESSTHAN expression .)
    LESSTHANEQUAL   reduce using rule 31 (expression -> expression LESSTHAN expression .)
    EQUAL           reduce using rule 31 (expression -> expression LESSTHAN expression .)
    NOTEQUAL        reduce using rule 31 (expression -> expression LESSTHAN expression .)
    GREATERTHAN     reduce using rule 31 (expression -> expression LESSTHAN expression .)
    GREATERTHANEQUAL reduce using rule 31 (expression -> expression LESSTHAN expression .)
    OR              reduce using rule 31 (expression -> expression LESSTHAN expression .)
    AND             reduce using rule 31 (expression -> expression LESSTHAN expression .)
    LBRACKET        reduce using rule 31 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 31 (expression -> expression LESSTHAN expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression LESSTHAN expression .)
    RBRACKET        reduce using rule 31 (expression -> expression LESSTHAN expression .)
    COMMA           reduce using rule 31 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! FLOORDIVISION   [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! EXPONENT        [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! IN              [ reduce using rule 31 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 89

    (32) expression -> expression LESSTHANEQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    LESSTHAN        reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    EQUAL           reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    GREATERTHAN     reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    GREATERTHANEQUAL reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    OR              reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    AND             reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    LBRACKET        reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    RBRACKET        reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! FLOORDIVISION   [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! IN              [ reduce using rule 32 (expression -> expression LESSTHANEQUAL expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 90

    (33) expression -> expression EQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 33 (expression -> expression EQUAL expression .)
    LESSTHAN        reduce using rule 33 (expression -> expression EQUAL expression .)
    LESSTHANEQUAL   reduce using rule 33 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 33 (expression -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression EQUAL expression .)
    GREATERTHAN     reduce using rule 33 (expression -> expression EQUAL expression .)
    GREATERTHANEQUAL reduce using rule 33 (expression -> expression EQUAL expression .)
    OR              reduce using rule 33 (expression -> expression EQUAL expression .)
    AND             reduce using rule 33 (expression -> expression EQUAL expression .)
    LBRACKET        reduce using rule 33 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 33 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 33 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 33 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! FLOORDIVISION   [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! MODULO          [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! IN              [ reduce using rule 33 (expression -> expression EQUAL expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 91

    (34) expression -> expression NOTEQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    LESSTHAN        reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    GREATERTHAN     reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    GREATERTHANEQUAL reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    OR              reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    AND             reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    LBRACKET        reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    RBRACKET        reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 34 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! FLOORDIVISION   [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! MODULO          [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! IN              [ reduce using rule 34 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 92

    (35) expression -> expression GREATERTHAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LESSTHAN        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LESSTHANEQUAL   reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    EQUAL           reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    GREATERTHAN     reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    GREATERTHANEQUAL reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    OR              reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    AND             reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    LBRACKET        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    RBRACKET        reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    COMMA           reduce using rule 35 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! FLOORDIVISION   [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! EXPONENT        [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! IN              [ reduce using rule 35 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 93

    (36) expression -> expression GREATERTHANEQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    LESSTHAN        reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    LESSTHANEQUAL   reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    EQUAL           reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    GREATERTHAN     reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    GREATERTHANEQUAL reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    OR              reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    AND             reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    LBRACKET        reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    RBRACKET        reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! FLOORDIVISION   [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! EXPONENT        [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! IN              [ reduce using rule 36 (expression -> expression GREATERTHANEQUAL expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 94

    (37) expression -> expression OR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 37 (expression -> expression OR expression .)
    OR              reduce using rule 37 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 37 (expression -> expression OR expression .)
    RPAREN          reduce using rule 37 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 37 (expression -> expression OR expression .)
    COMMA           reduce using rule 37 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    AND             shift and go to state 56
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! FLOORDIVISION   [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EXPONENT        [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESSTHAN        [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! EQUAL           [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! NOTEQUAL        [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 37 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 95

    (38) expression -> expression AND expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 38 (expression -> expression AND expression .)
    OR              reduce using rule 38 (expression -> expression AND expression .)
    AND             reduce using rule 38 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 38 (expression -> expression AND expression .)
    RPAREN          reduce using rule 38 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 38 (expression -> expression AND expression .)
    COMMA           reduce using rule 38 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    IN              shift and go to state 57

  ! PLUS            [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! FLOORDIVISION   [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! EXPONENT        [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! LESSTHAN        [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! LESSTHANEQUAL   [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! NOTEQUAL        [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! GREATERTHANEQUAL [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 38 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 96

    (39) expression -> expression IN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    ASSIGMENT       reduce using rule 39 (expression -> expression IN expression .)
    LESSTHAN        reduce using rule 39 (expression -> expression IN expression .)
    LESSTHANEQUAL   reduce using rule 39 (expression -> expression IN expression .)
    EQUAL           reduce using rule 39 (expression -> expression IN expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression IN expression .)
    GREATERTHAN     reduce using rule 39 (expression -> expression IN expression .)
    GREATERTHANEQUAL reduce using rule 39 (expression -> expression IN expression .)
    OR              reduce using rule 39 (expression -> expression IN expression .)
    AND             reduce using rule 39 (expression -> expression IN expression .)
    IN              reduce using rule 39 (expression -> expression IN expression .)
    LBRACKET        reduce using rule 39 (expression -> expression IN expression .)
    RPAREN          reduce using rule 39 (expression -> expression IN expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression IN expression .)
    RBRACKET        reduce using rule 39 (expression -> expression IN expression .)
    COMMA           reduce using rule 39 (expression -> expression IN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! PLUS            [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! FLOORDIVISION   [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! EXPONENT        [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! MODULO          [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression IN expression .) ]
  ! LESSTHAN        [ shift and go to state 49 ]
  ! LESSTHANEQUAL   [ shift and go to state 50 ]
  ! EQUAL           [ shift and go to state 51 ]
  ! NOTEQUAL        [ shift and go to state 52 ]
  ! GREATERTHAN     [ shift and go to state 53 ]
  ! GREATERTHANEQUAL [ shift and go to state 54 ]
  ! OR              [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! IN              [ shift and go to state 57 ]
  ! LBRACKET        [ shift and go to state 59 ]

    bracket                        shift and go to state 58

state 97

    (48) bracket -> LBRACKET expression . RBRACKET
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 108
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 98

    (20) printsmt -> PRINT LPAREN expression . RPAREN SEMICOLON
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 99

    (59) factor -> LPAREN expression RPAREN .

    ASSIGMENT       reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    FLOORDIVISION   reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    EXPONENT        reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    LESSTHANEQUAL   reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    GREATERTHANEQUAL reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    IN              reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 59 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 59 (factor -> LPAREN expression RPAREN .)


state 100

    (22) ifstatement -> IF LPAREN expression . RPAREN bodystatement
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 114
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 101

    (21) whilestatement -> WHILE LPAREN expression . RPAREN bodystatement
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 102

    (18) returnstatement -> RETURN expression SEMICOLON .

    PRINT           reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    LCURLY          reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    PLUS            reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    REAL            reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    RCURLY          reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 18 (returnstatement -> RETURN expression SEMICOLON .)


state 103

    (60) funExp -> ID LPAREN expressionlist . RPAREN
    (54) expressionlist -> expressionlist . COMMA expression

    RPAREN          shift and go to state 116
    COMMA           shift and go to state 117


state 104

    (61) funExp -> ID LPAREN RPAREN .

    ASSIGMENT       reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    FLOORDIVISION   reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    EXPONENT        reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    MODULO          reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    LESSTHAN        reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    LESSTHANEQUAL   reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    EQUAL           reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    GREATERTHANEQUAL reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    OR              reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    AND             reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    IN              reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 61 (funExp -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 61 (funExp -> ID LPAREN RPAREN .)


state 105

    (55) expressionlist -> expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 55 (expressionlist -> expression .)
    COMMA           reduce using rule 55 (expressionlist -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 106

    (51) list -> LBRACKET commalist RBRACKET .

    LBRACKET        reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    ASSIGMENT       reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    PLUS            reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    MINUS           reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    FLOORDIVISION   reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    EXPONENT        reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    MODULO          reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    TIMES           reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    DIVIDE          reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    LESSTHAN        reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    LESSTHANEQUAL   reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    EQUAL           reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    NOTEQUAL        reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    GREATERTHAN     reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    GREATERTHANEQUAL reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    OR              reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    AND             reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    IN              reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    RPAREN          reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    SEMICOLON       reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    RBRACKET        reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)
    COMMA           reduce using rule 51 (list -> LBRACKET commalist RBRACKET .)


state 107

    (53) commalist -> commalist COMMA . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 118
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 108

    (48) bracket -> LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    ASSIGMENT       reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    FLOORDIVISION   reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    EXPONENT        reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    MODULO          reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    LESSTHAN        reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    LESSTHANEQUAL   reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    NOTEQUAL        reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    GREATERTHAN     reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    GREATERTHANEQUAL reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    OR              reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    AND             reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    IN              reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 48 (bracket -> LBRACKET expression RBRACKET .)


state 109

    (5) function -> ID LPAREN IDlist RPAREN . block
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY

    LCURLY          shift and go to state 5

    block                          shift and go to state 119

state 110

    (56) IDlist -> IDlist COMMA . ID

    ID              shift and go to state 120


state 111

    (6) function -> ID LPAREN RPAREN block .

    LCURLY          reduce using rule 6 (function -> ID LPAREN RPAREN block .)
    ID              reduce using rule 6 (function -> ID LPAREN RPAREN block .)


state 112

    (17) statement -> expression ASSIGMENT expression SEMICOLON .

    PRINT           reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    IF              reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    LCURLY          reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    NOT             reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    PLUS            reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    LPAREN          reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    INTEGER         reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    REAL            reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    STRING          reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    ID              reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    LBRACKET        reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    RCURLY          reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> expression ASSIGMENT expression SEMICOLON .)


state 113

    (20) printsmt -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 121


state 114

    (22) ifstatement -> IF LPAREN expression RPAREN . bodystatement
    (19) bodystatement -> . statement
    (11) statement -> . printsmt
    (12) statement -> . ifstatement
    (13) statement -> . whilestatement
    (14) statement -> . elsestatement
    (15) statement -> . block
    (16) statement -> . returnstatement
    (17) statement -> . expression ASSIGMENT expression SEMICOLON
    (20) printsmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (22) ifstatement -> . IF LPAREN expression RPAREN bodystatement
    (21) whilestatement -> . WHILE LPAREN expression RPAREN bodystatement
    (23) elsestatement -> . ifstatement ELSE bodystatement
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (18) returnstatement -> . RETURN expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    PRINT           shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    LCURLY          shift and go to state 5
    RETURN          shift and go to state 23
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 18
    bodystatement                  shift and go to state 122
    statement                      shift and go to state 79
    printsmt                       shift and go to state 12
    ifstatement                    shift and go to state 13
    whilestatement                 shift and go to state 14
    elsestatement                  shift and go to state 15
    block                          shift and go to state 16
    returnstatement                shift and go to state 17
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 115

    (21) whilestatement -> WHILE LPAREN expression RPAREN . bodystatement
    (19) bodystatement -> . statement
    (11) statement -> . printsmt
    (12) statement -> . ifstatement
    (13) statement -> . whilestatement
    (14) statement -> . elsestatement
    (15) statement -> . block
    (16) statement -> . returnstatement
    (17) statement -> . expression ASSIGMENT expression SEMICOLON
    (20) printsmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (22) ifstatement -> . IF LPAREN expression RPAREN bodystatement
    (21) whilestatement -> . WHILE LPAREN expression RPAREN bodystatement
    (23) elsestatement -> . ifstatement ELSE bodystatement
    (7) block -> . LCURLY statements RCURLY
    (8) block -> . LCURLY RCURLY
    (18) returnstatement -> . RETURN expression SEMICOLON
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    PRINT           shift and go to state 19
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    LCURLY          shift and go to state 5
    RETURN          shift and go to state 23
    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 18
    bodystatement                  shift and go to state 123
    statement                      shift and go to state 79
    printsmt                       shift and go to state 12
    ifstatement                    shift and go to state 13
    whilestatement                 shift and go to state 14
    elsestatement                  shift and go to state 15
    block                          shift and go to state 16
    returnstatement                shift and go to state 17
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 116

    (60) funExp -> ID LPAREN expressionlist RPAREN .

    ASSIGMENT       reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    PLUS            reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    MINUS           reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    FLOORDIVISION   reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    EXPONENT        reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    MODULO          reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    TIMES           reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    DIVIDE          reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    LESSTHAN        reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    LESSTHANEQUAL   reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    EQUAL           reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    NOTEQUAL        reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    GREATERTHAN     reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    GREATERTHANEQUAL reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    OR              reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    AND             reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    IN              reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    LBRACKET        reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    RPAREN          reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    SEMICOLON       reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    RBRACKET        reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)
    COMMA           reduce using rule 60 (funExp -> ID LPAREN expressionlist RPAREN .)


state 117

    (54) expressionlist -> expressionlist COMMA . expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression FLOORDIVISION expression
    (27) expression -> . expression EXPONENT expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression TIMES expression
    (30) expression -> . expression DIVIDE expression
    (31) expression -> . expression LESSTHAN expression
    (32) expression -> . expression LESSTHANEQUAL expression
    (33) expression -> . expression EQUAL expression
    (34) expression -> . expression NOTEQUAL expression
    (35) expression -> . expression GREATERTHAN expression
    (36) expression -> . expression GREATERTHANEQUAL expression
    (37) expression -> . expression OR expression
    (38) expression -> . expression AND expression
    (39) expression -> . expression IN expression
    (40) expression -> . NOT expression
    (41) expression -> . PLUS expression
    (58) expression -> . factor
    (59) factor -> . LPAREN expression RPAREN
    (62) factor -> . INTEGER
    (63) factor -> . REAL
    (64) factor -> . STRING
    (65) factor -> . ID
    (66) factor -> . list
    (67) factor -> . index
    (68) factor -> . funExp
    (49) list -> . LBRACKET RBRACKET
    (50) list -> . bracket
    (51) list -> . LBRACKET commalist RBRACKET
    (42) index -> . list bracket
    (43) index -> . STRING bracket
    (44) index -> . ID bracket
    (45) index -> . expression bracket
    (46) index -> . indices
    (60) funExp -> . ID LPAREN expressionlist RPAREN
    (61) funExp -> . ID LPAREN RPAREN
    (48) bracket -> . LBRACKET expression RBRACKET
    (47) indices -> . index bracket

    NOT             shift and go to state 25
    PLUS            shift and go to state 24
    LPAREN          shift and go to state 20
    INTEGER         shift and go to state 27
    REAL            shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 30
    LBRACKET        shift and go to state 34

    expression                     shift and go to state 124
    factor                         shift and go to state 26
    list                           shift and go to state 31
    index                          shift and go to state 32
    funExp                         shift and go to state 33
    bracket                        shift and go to state 35
    indices                        shift and go to state 36

state 118

    (53) commalist -> commalist COMMA expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RBRACKET        reduce using rule 53 (commalist -> commalist COMMA expression .)
    COMMA           reduce using rule 53 (commalist -> commalist COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58

state 119

    (5) function -> ID LPAREN IDlist RPAREN block .

    LCURLY          reduce using rule 5 (function -> ID LPAREN IDlist RPAREN block .)
    ID              reduce using rule 5 (function -> ID LPAREN IDlist RPAREN block .)


state 120

    (56) IDlist -> IDlist COMMA ID .

    RPAREN          reduce using rule 56 (IDlist -> IDlist COMMA ID .)
    COMMA           reduce using rule 56 (IDlist -> IDlist COMMA ID .)


state 121

    (20) printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .

    PRINT           reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LCURLY          reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NOT             reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PLUS            reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    REAL            reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RCURLY          reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 20 (printsmt -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 122

    (22) ifstatement -> IF LPAREN expression RPAREN bodystatement .

    ELSE            reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    PRINT           reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    IF              reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    WHILE           reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    LCURLY          reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    RETURN          reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    NOT             reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    PLUS            reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    LPAREN          reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    INTEGER         reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    REAL            reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    STRING          reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    ID              reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    LBRACKET        reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)
    RCURLY          reduce using rule 22 (ifstatement -> IF LPAREN expression RPAREN bodystatement .)


state 123

    (21) whilestatement -> WHILE LPAREN expression RPAREN bodystatement .

    PRINT           reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    IF              reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    WHILE           reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    LCURLY          reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    RETURN          reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    NOT             reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    PLUS            reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    LPAREN          reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    INTEGER         reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    REAL            reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    STRING          reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    ID              reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    LBRACKET        reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    RCURLY          reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)
    ELSE            reduce using rule 21 (whilestatement -> WHILE LPAREN expression RPAREN bodystatement .)


state 124

    (54) expressionlist -> expressionlist COMMA expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . FLOORDIVISION expression
    (27) expression -> expression . EXPONENT expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . TIMES expression
    (30) expression -> expression . DIVIDE expression
    (31) expression -> expression . LESSTHAN expression
    (32) expression -> expression . LESSTHANEQUAL expression
    (33) expression -> expression . EQUAL expression
    (34) expression -> expression . NOTEQUAL expression
    (35) expression -> expression . GREATERTHAN expression
    (36) expression -> expression . GREATERTHANEQUAL expression
    (37) expression -> expression . OR expression
    (38) expression -> expression . AND expression
    (39) expression -> expression . IN expression
    (45) index -> expression . bracket
    (48) bracket -> . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 54 (expressionlist -> expressionlist COMMA expression .)
    COMMA           reduce using rule 54 (expressionlist -> expressionlist COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    FLOORDIVISION   shift and go to state 44
    EXPONENT        shift and go to state 45
    MODULO          shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LESSTHAN        shift and go to state 49
    LESSTHANEQUAL   shift and go to state 50
    EQUAL           shift and go to state 51
    NOTEQUAL        shift and go to state 52
    GREATERTHAN     shift and go to state 53
    GREATERTHANEQUAL shift and go to state 54
    OR              shift and go to state 55
    AND             shift and go to state 56
    IN              shift and go to state 57
    LBRACKET        shift and go to state 59

    bracket                        shift and go to state 58
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 13 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 29 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 30 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 31 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 32 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 74 resolved as shift
